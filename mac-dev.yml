---
- hosts: mac-dev
  vars:
    vimfiles_path: "{{ ansible_env.HOME }}/.vim"
    git:

  tasks:
    - name: install chrome
      homebrew_cask:
        name: google-chrome

    - name: install iterm2
      homebrew_cask:
        name: iterm2

    - name: install dropbox
      homebrew_cask:
        name: dropbox

    - name: install vim
      homebrew:
        name: vim
        install_options: with-lua

    - name: install gnu-tar
      homebrew:
        name: gnu-tar
        install_options: with-default-names

    - name: download laun-vim repo
      git:
        repo: 'https://github.com/luan/vimfiles'
        dest: "{{ vimfiles_path }}"
        update: no

    - name: touch .vimrc.local{,.before,.plugins}
      file:
        path: "{{ ansible_env.HOME + '/.vimrc.local' + item }}"
        state: touch
        owner: "{{ ansible_env.USER }}"
        mode: 0600
      changed_when: False
      with_items:
        - ''
        - .before
        - .plugins

    - name: link .{g,}vimrc files
      file:
        src: "{{ vimfiles_path }}/{{ item }}"
        dest: "{{ ansible_env.HOME }}/.{{ item }}"
        state: link
        owner: "{{ ansible_env.USER }}"
        mode: 0600
      with_items:
        - vimrc
        - gvimrc

    - name: install vim-update
      file:
        src: "{{ vimfiles_path }}/bin/update"
        dest: /usr/local/bin/vim-update
        owner: "{{ ansible_env.USER }}"
        mode: 0755

    - name: install elm-format
      unarchive:
        src: "https://github.com/avh4/elm-format/releases/download/0.2.0-alpha/elm-format-0.2.0-alpha-mac-x64.tgz"
        dest: "{{ vimfiles_path }}/bin"
        owner: "{{ ansible_env.USER }}"
        mode: 0755
        remote_src: True
      environment:
        PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

    - name: vim plugins
      shell: "ALL_PLUGINS='true' vim +'PlugClean!' +'PlugUpdate!' +'qall!' > /dev/null"
      args:
        creates: "{{ vimfiles_path }}/plugged"

    - name: git_username_prompt
      pause:
        prompt: "Please specify git username: [{{ ansible_user_gecos }}]"
        private: no
      register: git_username_prompt
      when: git.username is undefined

    - name: git_email_prompt
      pause:
        prompt: "Please specify git email: [{{ ansible_user_id + '@' + ansible_fqdn }}]"
        private: no
      register: git_email_prompt
      when: git.email is undefined

    - name: set git.email var
      set_fact:
        git:
          username: "{{ git_username_prompt.user_input|default(ansible_user_gecos, true) }}"
          email: "{{ git_email_prompt.user_input|default(ansible_user_id + '@' + ansible_fqdn, true) }}"
      when:
        - git_email_prompt is defined and git.email is undefined
        - git_username_prompt is defined and git.username is undefined

    - name: ~/.gitconfig
      template:
        src: gitconfig
        dest: "{{ ansible_env.HOME }}/.gitconfig"
        mode: 0644
      vars:
        username: "{{ git.username }}"
        email: "{{ git.email }}"
